{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":38,"index":108}}],"key":"+Akla+LrhuGGU54C9zXxLPlFUv4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"cacheManager\", {\n    enumerable: true,\n    get: function () {\n      return cacheManager;\n    }\n  });\n  Object.defineProperty(exports, \"CACHE_KEYS\", {\n    enumerable: true,\n    get: function () {\n      return CACHE_KEYS;\n    }\n  });\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoCrypto = require(_dependencyMap[1], \"expo-crypto\");\n  var Crypto = _interopNamespace(_expoCrypto);\n  // Tipi per cache\n\n  // Chiavi cache\n  const CACHE_KEYS = {\n    USER_PROFILE: 'cache_user_profile',\n    CHILDREN_PROFILES: 'cache_children_profiles',\n    DIARY_ENTRIES: 'cache_diary_entries',\n    MEAL_PLANS: 'cache_meal_plans',\n    AI_SCANNER_RESULTS: 'cache_scanner_results',\n    COACH_MESSAGES: 'cache_coach_messages',\n    OFFLINE_QUEUE: 'cache_offline_queue',\n    FOOD_DATABASE: 'cache_food_database',\n    LAST_SYNC: 'cache_last_sync'\n  };\n\n  // TTL defaults (in secondi)\n  const DEFAULT_TTL = {\n    USER_PROFILE: 7 * 24 * 60 * 60,\n    // 7 giorni\n    CHILDREN_PROFILES: 7 * 24 * 60 * 60,\n    // 7 giorni\n    DIARY_ENTRIES: 7 * 24 * 60 * 60,\n    // 7 giorni\n    MEAL_PLANS: 14 * 24 * 60 * 60,\n    // 14 giorni\n    AI_SCANNER_RESULTS: 7 * 24 * 60 * 60,\n    // 7 giorni\n    COACH_MESSAGES: 3 * 24 * 60 * 60,\n    // 3 giorni\n    FOOD_DATABASE: 30 * 24 * 60 * 60 // 30 giorni\n  };\n  class CacheManager {\n    encryptionKey = null;\n\n    // Inizializza encryption key\n    async initialize(userEmail) {\n      // Genera chiave basata su email (semplificata, in produzione usa più robusto)\n      const digest = await Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, userEmail + 'nutrikids_salt');\n      this.encryptionKey = digest.substring(0, 32);\n    }\n\n    // Encrypt data (semplificato - in produzione usa expo-crypto più robusto)\n    async encrypt(data) {\n      try {\n        // In produzione, usa AES encryption con expo-crypto\n        // Per ora, base64 encoding (placeholder)\n        return Buffer.from(data).toString('base64');\n      } catch (error) {\n        console.error('Encryption error:', error);\n        return data;\n      }\n    }\n\n    // Decrypt data\n    async decrypt(encryptedData) {\n      try {\n        return Buffer.from(encryptedData, 'base64').toString('utf-8');\n      } catch (error) {\n        console.error('Decryption error:', error);\n        return encryptedData;\n      }\n    }\n\n    // Salva dati in cache\n    async set(key, data, ttl) {\n      try {\n        const cacheItem = {\n          data,\n          timestamp: Date.now(),\n          ttl: ttl || DEFAULT_TTL.USER_PROFILE\n        };\n        const jsonString = JSON.stringify(cacheItem);\n        const encrypted = await this.encrypt(jsonString);\n        await AsyncStorage.default.setItem(key, encrypted);\n      } catch (error) {\n        console.error('Cache set error:', error);\n      }\n    }\n\n    // Recupera dati da cache\n    async get(key) {\n      try {\n        const encrypted = await AsyncStorage.default.getItem(key);\n        if (!encrypted) return null;\n        const decrypted = await this.decrypt(encrypted);\n        const cacheItem = JSON.parse(decrypted);\n\n        // Verifica TTL\n        const age = Date.now() - cacheItem.timestamp;\n        if (age > cacheItem.ttl * 1000) {\n          // Cache scaduta\n          await this.remove(key);\n          return null;\n        }\n        return cacheItem.data;\n      } catch (error) {\n        console.error('Cache get error:', error);\n        return null;\n      }\n    }\n\n    // Rimuovi dalla cache\n    async remove(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        console.error('Cache remove error:', error);\n      }\n    }\n\n    // Clear all cache\n    async clearAll() {\n      try {\n        const keys = Object.values(CACHE_KEYS);\n        await AsyncStorage.default.multiRemove(keys);\n      } catch (error) {\n        console.error('Cache clear error:', error);\n      }\n    }\n\n    // Salva profilo utente\n    async cacheUserProfile(profile) {\n      await this.set(CACHE_KEYS.USER_PROFILE, profile, DEFAULT_TTL.USER_PROFILE);\n    }\n\n    // Recupera profilo utente\n    async getUserProfile() {\n      return await this.get(CACHE_KEYS.USER_PROFILE);\n    }\n\n    // Salva profili bambini\n    async cacheChildrenProfiles(children) {\n      await this.set(CACHE_KEYS.CHILDREN_PROFILES, children, DEFAULT_TTL.CHILDREN_PROFILES);\n    }\n\n    // Recupera profili bambini\n    async getChildrenProfiles() {\n      return await this.get(CACHE_KEYS.CHILDREN_PROFILES);\n    }\n\n    // Salva diary entries (ultimi 7 giorni)\n    async cacheDiaryEntries(entries) {\n      // Filtra solo ultimi 7 giorni\n      const sevenDaysAgo = Date.now() - 7 * 24 * 60 * 60 * 1000;\n      const recentEntries = entries.filter(entry => {\n        const entryTime = new Date(entry.timestamp).getTime();\n        return entryTime > sevenDaysAgo;\n      });\n      await this.set(CACHE_KEYS.DIARY_ENTRIES, recentEntries, DEFAULT_TTL.DIARY_ENTRIES);\n    }\n\n    // Recupera diary entries\n    async getDiaryEntries() {\n      return await this.get(CACHE_KEYS.DIARY_ENTRIES);\n    }\n\n    // Salva risultati scanner AI\n    async cacheScannerResult(result) {\n      const existingResults = (await this.get(CACHE_KEYS.AI_SCANNER_RESULTS)) || [];\n\n      // Aggiungi nuovo risultato\n      existingResults.unshift(result);\n\n      // Mantieni solo ultimi 20 risultati\n      const limitedResults = existingResults.slice(0, 20);\n      await this.set(CACHE_KEYS.AI_SCANNER_RESULTS, limitedResults, DEFAULT_TTL.AI_SCANNER_RESULTS);\n    }\n\n    // Recupera risultati scanner\n    async getScannerResults() {\n      return await this.get(CACHE_KEYS.AI_SCANNER_RESULTS);\n    }\n\n    // Salva messaggi Coach Maya\n    async cacheCoachMessages(messages) {\n      // Mantieni solo ultimi 50 messaggi\n      const limitedMessages = messages.slice(-50);\n      await this.set(CACHE_KEYS.COACH_MESSAGES, limitedMessages, DEFAULT_TTL.COACH_MESSAGES);\n    }\n\n    // Recupera messaggi Coach\n    async getCoachMessages() {\n      return await this.get(CACHE_KEYS.COACH_MESSAGES);\n    }\n\n    // Salva piani pasto\n    async cacheMealPlans(plans) {\n      await this.set(CACHE_KEYS.MEAL_PLANS, plans, DEFAULT_TTL.MEAL_PLANS);\n    }\n\n    // Recupera piani pasto\n    async getMealPlans() {\n      return await this.get(CACHE_KEYS.MEAL_PLANS);\n    }\n\n    // Database cibi comuni (per fallback offline)\n    async cacheFoodDatabase(foods) {\n      await this.set(CACHE_KEYS.FOOD_DATABASE, foods, DEFAULT_TTL.FOOD_DATABASE);\n    }\n\n    // Recupera database cibi\n    async getFoodDatabase() {\n      return await this.get(CACHE_KEYS.FOOD_DATABASE);\n    }\n\n    // --- Offline Queue Management ---\n\n    // Aggiungi operazione a coda offline\n    async addToOfflineQueue(operation) {\n      try {\n        const queue = await this.getOfflineQueue();\n        const newItem = {\n          id: `offline_${Date.now()}_${Math.random().toString(36).substring(7)}`,\n          ...operation,\n          timestamp: Date.now(),\n          retries: 0\n        };\n        queue.push(newItem);\n        await this.set(CACHE_KEYS.OFFLINE_QUEUE, queue);\n      } catch (error) {\n        console.error('Error adding to offline queue:', error);\n      }\n    }\n\n    // Recupera coda offline\n    async getOfflineQueue() {\n      return (await this.get(CACHE_KEYS.OFFLINE_QUEUE)) || [];\n    }\n\n    // Rimuovi item da coda\n    async removeFromOfflineQueue(itemId) {\n      try {\n        const queue = await this.getOfflineQueue();\n        const updatedQueue = queue.filter(item => item.id !== itemId);\n        await this.set(CACHE_KEYS.OFFLINE_QUEUE, updatedQueue);\n      } catch (error) {\n        console.error('Error removing from offline queue:', error);\n      }\n    }\n\n    // Incrementa retry count\n    async incrementRetryCount(itemId) {\n      try {\n        const queue = await this.getOfflineQueue();\n        const updatedQueue = queue.map(item => item.id === itemId ? {\n          ...item,\n          retries: item.retries + 1\n        } : item);\n        await this.set(CACHE_KEYS.OFFLINE_QUEUE, updatedQueue);\n      } catch (error) {\n        console.error('Error incrementing retry count:', error);\n      }\n    }\n\n    // Clear coda offline\n    async clearOfflineQueue() {\n      await this.set(CACHE_KEYS.OFFLINE_QUEUE, []);\n    }\n\n    // Salva timestamp ultima sync\n    async setLastSyncTimestamp() {\n      await AsyncStorage.default.setItem(CACHE_KEYS.LAST_SYNC, Date.now().toString());\n    }\n\n    // Recupera timestamp ultima sync\n    async getLastSyncTimestamp() {\n      try {\n        const timestamp = await AsyncStorage.default.getItem(CACHE_KEYS.LAST_SYNC);\n        return timestamp ? parseInt(timestamp) : null;\n      } catch (error) {\n        return null;\n      }\n    }\n\n    // Ottieni dimensione cache totale (per debug)\n    async getCacheSize() {\n      try {\n        const keys = Object.values(CACHE_KEYS);\n        let totalSize = 0;\n        for (const key of keys) {\n          const item = await AsyncStorage.default.getItem(key);\n          if (item) {\n            totalSize += new Blob([item]).size;\n          }\n        }\n        return totalSize; // in bytes\n      } catch (error) {\n        console.error('Error calculating cache size:', error);\n        return 0;\n      }\n    }\n  }\n  const cacheManager = new CacheManager();\n});","lineCount":336,"map":[[27,2,320,0,"Object"],[27,8,320,0],[27,9,320,0,"defineProperty"],[27,23,320,0],[27,24,320,0,"exports"],[27,31,320,0],[28,4,320,0,"enumerable"],[28,14,320,0],[29,4,320,0,"get"],[29,7,320,0],[29,18,320,0,"get"],[29,19,320,0],[30,6,320,0],[30,13,320,0,"cacheManager"],[30,25,320,0],[31,4,320,0],[32,2,320,0],[33,2,321,0,"Object"],[33,8,321,0],[33,9,321,0,"defineProperty"],[33,23,321,0],[33,24,321,0,"exports"],[33,31,321,0],[34,4,321,0,"enumerable"],[34,14,321,0],[35,4,321,0,"get"],[35,7,321,0],[35,18,321,0,"get"],[35,19,321,0],[36,6,321,0],[36,13,321,9,"CACHE_KEYS"],[36,23,321,19],[37,4,321,19],[38,2,321,19],[39,2,1,0],[39,6,1,0,"_reactNativeAsyncStorageAsyncStorage"],[39,42,1,0],[39,45,1,0,"require"],[39,52,1,0],[39,53,1,0,"_dependencyMap"],[39,67,1,0],[40,2,1,0],[40,6,1,0,"AsyncStorage"],[40,18,1,0],[40,21,1,0,"_interopDefault"],[40,36,1,0],[40,37,1,0,"_reactNativeAsyncStorageAsyncStorage"],[40,73,1,0],[41,2,2,0],[41,6,2,0,"_expoCrypto"],[41,17,2,0],[41,20,2,0,"require"],[41,27,2,0],[41,28,2,0,"_dependencyMap"],[41,42,2,0],[42,2,2,0],[42,6,2,0,"Crypto"],[42,12,2,0],[42,15,2,0,"_interopNamespace"],[42,32,2,0],[42,33,2,0,"_expoCrypto"],[42,44,2,0],[43,2,4,0],[45,2,20,0],[46,2,21,0],[46,8,21,6,"CACHE_KEYS"],[46,18,21,16],[46,21,21,19],[47,4,22,2,"USER_PROFILE"],[47,16,22,14],[47,18,22,16],[47,38,22,36],[48,4,23,2,"CHILDREN_PROFILES"],[48,21,23,19],[48,23,23,21],[48,48,23,46],[49,4,24,2,"DIARY_ENTRIES"],[49,17,24,15],[49,19,24,17],[49,40,24,38],[50,4,25,2,"MEAL_PLANS"],[50,14,25,12],[50,16,25,14],[50,34,25,32],[51,4,26,2,"AI_SCANNER_RESULTS"],[51,22,26,20],[51,24,26,22],[51,47,26,45],[52,4,27,2,"COACH_MESSAGES"],[52,18,27,16],[52,20,27,18],[52,42,27,40],[53,4,28,2,"OFFLINE_QUEUE"],[53,17,28,15],[53,19,28,17],[53,40,28,38],[54,4,29,2,"FOOD_DATABASE"],[54,17,29,15],[54,19,29,17],[54,40,29,38],[55,4,30,2,"LAST_SYNC"],[55,13,30,11],[55,15,30,13],[56,2,31,0],[56,3,31,1],[58,2,33,0],[59,2,34,0],[59,8,34,6,"DEFAULT_TTL"],[59,19,34,17],[59,22,34,20],[60,4,35,2,"USER_PROFILE"],[60,16,35,14],[60,18,35,16],[60,19,35,17],[60,22,35,20],[60,24,35,22],[60,27,35,25],[60,29,35,27],[60,32,35,30],[60,34,35,32],[61,4,35,34],[62,4,36,2,"CHILDREN_PROFILES"],[62,21,36,19],[62,23,36,21],[62,24,36,22],[62,27,36,25],[62,29,36,27],[62,32,36,30],[62,34,36,32],[62,37,36,35],[62,39,36,37],[63,4,36,39],[64,4,37,2,"DIARY_ENTRIES"],[64,17,37,15],[64,19,37,17],[64,20,37,18],[64,23,37,21],[64,25,37,23],[64,28,37,26],[64,30,37,28],[64,33,37,31],[64,35,37,33],[65,4,37,35],[66,4,38,2,"MEAL_PLANS"],[66,14,38,12],[66,16,38,14],[66,18,38,16],[66,21,38,19],[66,23,38,21],[66,26,38,24],[66,28,38,26],[66,31,38,29],[66,33,38,31],[67,4,38,33],[68,4,39,2,"AI_SCANNER_RESULTS"],[68,22,39,20],[68,24,39,22],[68,25,39,23],[68,28,39,26],[68,30,39,28],[68,33,39,31],[68,35,39,33],[68,38,39,36],[68,40,39,38],[69,4,39,40],[70,4,40,2,"COACH_MESSAGES"],[70,18,40,16],[70,20,40,18],[70,21,40,19],[70,24,40,22],[70,26,40,24],[70,29,40,27],[70,31,40,29],[70,34,40,32],[70,36,40,34],[71,4,40,36],[72,4,41,2,"FOOD_DATABASE"],[72,17,41,15],[72,19,41,17],[72,21,41,19],[72,24,41,22],[72,26,41,24],[72,29,41,27],[72,31,41,29],[72,34,41,32],[72,36,41,34],[72,37,41,36],[73,2,42,0],[73,3,42,1],[74,2,44,0],[74,8,44,6,"CacheManager"],[74,20,44,18],[74,21,44,19],[75,4,45,10,"encryptionKey"],[75,17,45,23],[75,20,45,41],[75,24,45,45],[77,4,47,2],[78,4,48,2],[78,10,48,8,"initialize"],[78,20,48,18,"initialize"],[78,21,48,19,"userEmail"],[78,30,48,36],[78,32,48,38],[79,6,49,4],[80,6,50,4],[80,12,50,10,"digest"],[80,18,50,16],[80,21,50,19],[80,27,50,25,"Crypto"],[80,33,50,31],[80,34,50,32,"digestStringAsync"],[80,51,50,49],[80,52,51,6,"Crypto"],[80,58,51,12],[80,59,51,13,"CryptoDigestAlgorithm"],[80,80,51,34],[80,81,51,35,"SHA256"],[80,87,51,41],[80,89,52,6,"userEmail"],[80,98,52,15],[80,101,52,18],[80,117,53,4],[80,118,53,5],[81,6,54,4],[81,10,54,8],[81,11,54,9,"encryptionKey"],[81,24,54,22],[81,27,54,25,"digest"],[81,33,54,31],[81,34,54,32,"substring"],[81,43,54,41],[81,44,54,42],[81,45,54,43],[81,47,54,45],[81,49,54,47],[81,50,54,48],[82,4,55,2],[84,4,57,2],[85,4,58,2],[85,10,58,16,"encrypt"],[85,17,58,23,"encrypt"],[85,18,58,24,"data"],[85,22,58,36],[85,24,58,55],[86,6,59,4],[86,10,59,8],[87,8,60,6],[88,8,61,6],[89,8,62,6],[89,15,62,13,"Buffer"],[89,21,62,19],[89,22,62,20,"from"],[89,26,62,24],[89,27,62,25,"data"],[89,31,62,29],[89,32,62,30],[89,33,62,31,"toString"],[89,41,62,39],[89,42,62,40],[89,50,62,48],[89,51,62,49],[90,6,63,4],[90,7,63,5],[90,8,63,6],[90,15,63,13,"error"],[90,20,63,18],[90,22,63,20],[91,8,64,6,"console"],[91,15,64,13],[91,16,64,14,"error"],[91,21,64,19],[91,22,64,20],[91,41,64,39],[91,43,64,41,"error"],[91,48,64,46],[91,49,64,47],[92,8,65,6],[92,15,65,13,"data"],[92,19,65,17],[93,6,66,4],[94,4,67,2],[96,4,69,2],[97,4,70,2],[97,10,70,16,"decrypt"],[97,17,70,23,"decrypt"],[97,18,70,24,"encryptedData"],[97,31,70,45],[97,33,70,64],[98,6,71,4],[98,10,71,8],[99,8,72,6],[99,15,72,13,"Buffer"],[99,21,72,19],[99,22,72,20,"from"],[99,26,72,24],[99,27,72,25,"encryptedData"],[99,40,72,38],[99,42,72,40],[99,50,72,48],[99,51,72,49],[99,52,72,50,"toString"],[99,60,72,58],[99,61,72,59],[99,68,72,66],[99,69,72,67],[100,6,73,4],[100,7,73,5],[100,8,73,6],[100,15,73,13,"error"],[100,20,73,18],[100,22,73,20],[101,8,74,6,"console"],[101,15,74,13],[101,16,74,14,"error"],[101,21,74,19],[101,22,74,20],[101,41,74,39],[101,43,74,41,"error"],[101,48,74,46],[101,49,74,47],[102,8,75,6],[102,15,75,13,"encryptedData"],[102,28,75,26],[103,6,76,4],[104,4,77,2],[106,4,79,2],[107,4,80,2],[107,10,80,8,"set"],[107,13,80,11,"set"],[107,14,80,15,"key"],[107,17,80,26],[107,19,80,28,"data"],[107,23,80,35],[107,25,80,37,"ttl"],[107,28,80,49],[107,30,80,66],[108,6,81,4],[108,10,81,8],[109,8,82,6],[109,14,82,12,"cacheItem"],[109,23,82,35],[109,26,82,38],[110,10,83,8,"data"],[110,14,83,12],[111,10,84,8,"timestamp"],[111,19,84,17],[111,21,84,19,"Date"],[111,25,84,23],[111,26,84,24,"now"],[111,29,84,27],[111,30,84,28],[111,31,84,29],[112,10,85,8,"ttl"],[112,13,85,11],[112,15,85,13,"ttl"],[112,18,85,16],[112,22,85,20,"DEFAULT_TTL"],[112,33,85,31],[112,34,85,32,"USER_PROFILE"],[113,8,86,6],[113,9,86,7],[114,8,88,6],[114,14,88,12,"jsonString"],[114,24,88,22],[114,27,88,25,"JSON"],[114,31,88,29],[114,32,88,30,"stringify"],[114,41,88,39],[114,42,88,40,"cacheItem"],[114,51,88,49],[114,52,88,50],[115,8,89,6],[115,14,89,12,"encrypted"],[115,23,89,21],[115,26,89,24],[115,32,89,30],[115,36,89,34],[115,37,89,35,"encrypt"],[115,44,89,42],[115,45,89,43,"jsonString"],[115,55,89,53],[115,56,89,54],[116,8,91,6],[116,14,91,12,"AsyncStorage"],[116,26,91,24],[116,27,91,24,"default"],[116,34,91,24],[116,35,91,25,"setItem"],[116,42,91,32],[116,43,91,33,"key"],[116,46,91,36],[116,48,91,38,"encrypted"],[116,57,91,47],[116,58,91,48],[117,6,92,4],[117,7,92,5],[117,8,92,6],[117,15,92,13,"error"],[117,20,92,18],[117,22,92,20],[118,8,93,6,"console"],[118,15,93,13],[118,16,93,14,"error"],[118,21,93,19],[118,22,93,20],[118,40,93,38],[118,42,93,40,"error"],[118,47,93,45],[118,48,93,46],[119,6,94,4],[120,4,95,2],[122,4,97,2],[123,4,98,2],[123,10,98,8,"get"],[123,13,98,11,"get"],[123,14,98,15,"key"],[123,17,98,26],[123,19,98,47],[124,6,99,4],[124,10,99,8],[125,8,100,6],[125,14,100,12,"encrypted"],[125,23,100,21],[125,26,100,24],[125,32,100,30,"AsyncStorage"],[125,44,100,42],[125,45,100,42,"default"],[125,52,100,42],[125,53,100,43,"getItem"],[125,60,100,50],[125,61,100,51,"key"],[125,64,100,54],[125,65,100,55],[126,8,101,6],[126,12,101,10],[126,13,101,11,"encrypted"],[126,22,101,20],[126,24,101,22],[126,31,101,29],[126,35,101,33],[127,8,103,6],[127,14,103,12,"decrypted"],[127,23,103,21],[127,26,103,24],[127,32,103,30],[127,36,103,34],[127,37,103,35,"decrypt"],[127,44,103,42],[127,45,103,43,"encrypted"],[127,54,103,52],[127,55,103,53],[128,8,104,6],[128,14,104,12,"cacheItem"],[128,23,104,35],[128,26,104,38,"JSON"],[128,30,104,42],[128,31,104,43,"parse"],[128,36,104,48],[128,37,104,49,"decrypted"],[128,46,104,58],[128,47,104,59],[130,8,106,6],[131,8,107,6],[131,14,107,12,"age"],[131,17,107,15],[131,20,107,18,"Date"],[131,24,107,22],[131,25,107,23,"now"],[131,28,107,26],[131,29,107,27],[131,30,107,28],[131,33,107,31,"cacheItem"],[131,42,107,40],[131,43,107,41,"timestamp"],[131,52,107,50],[132,8,108,6],[132,12,108,10,"age"],[132,15,108,13],[132,18,108,16,"cacheItem"],[132,27,108,25],[132,28,108,26,"ttl"],[132,31,108,29],[132,34,108,32],[132,38,108,36],[132,40,108,38],[133,10,109,8],[134,10,110,8],[134,16,110,14],[134,20,110,18],[134,21,110,19,"remove"],[134,27,110,25],[134,28,110,26,"key"],[134,31,110,29],[134,32,110,30],[135,10,111,8],[135,17,111,15],[135,21,111,19],[136,8,112,6],[137,8,114,6],[137,15,114,13,"cacheItem"],[137,24,114,22],[137,25,114,23,"data"],[137,29,114,27],[138,6,115,4],[138,7,115,5],[138,8,115,6],[138,15,115,13,"error"],[138,20,115,18],[138,22,115,20],[139,8,116,6,"console"],[139,15,116,13],[139,16,116,14,"error"],[139,21,116,19],[139,22,116,20],[139,40,116,38],[139,42,116,40,"error"],[139,47,116,45],[139,48,116,46],[140,8,117,6],[140,15,117,13],[140,19,117,17],[141,6,118,4],[142,4,119,2],[144,4,121,2],[145,4,122,2],[145,10,122,8,"remove"],[145,16,122,14,"remove"],[145,17,122,15,"key"],[145,20,122,26],[145,22,122,43],[146,6,123,4],[146,10,123,8],[147,8,124,6],[147,14,124,12,"AsyncStorage"],[147,26,124,24],[147,27,124,24,"default"],[147,34,124,24],[147,35,124,25,"removeItem"],[147,45,124,35],[147,46,124,36,"key"],[147,49,124,39],[147,50,124,40],[148,6,125,4],[148,7,125,5],[148,8,125,6],[148,15,125,13,"error"],[148,20,125,18],[148,22,125,20],[149,8,126,6,"console"],[149,15,126,13],[149,16,126,14,"error"],[149,21,126,19],[149,22,126,20],[149,43,126,41],[149,45,126,43,"error"],[149,50,126,48],[149,51,126,49],[150,6,127,4],[151,4,128,2],[153,4,130,2],[154,4,131,2],[154,10,131,8,"clearAll"],[154,18,131,16,"clearAll"],[154,19,131,16],[154,21,131,34],[155,6,132,4],[155,10,132,8],[156,8,133,6],[156,14,133,12,"keys"],[156,18,133,16],[156,21,133,19,"Object"],[156,27,133,25],[156,28,133,26,"values"],[156,34,133,32],[156,35,133,33,"CACHE_KEYS"],[156,45,133,43],[156,46,133,44],[157,8,134,6],[157,14,134,12,"AsyncStorage"],[157,26,134,24],[157,27,134,24,"default"],[157,34,134,24],[157,35,134,25,"multiRemove"],[157,46,134,36],[157,47,134,37,"keys"],[157,51,134,41],[157,52,134,42],[158,6,135,4],[158,7,135,5],[158,8,135,6],[158,15,135,13,"error"],[158,20,135,18],[158,22,135,20],[159,8,136,6,"console"],[159,15,136,13],[159,16,136,14,"error"],[159,21,136,19],[159,22,136,20],[159,42,136,40],[159,44,136,42,"error"],[159,49,136,47],[159,50,136,48],[160,6,137,4],[161,4,138,2],[163,4,140,2],[164,4,141,2],[164,10,141,8,"cacheUserProfile"],[164,26,141,24,"cacheUserProfile"],[164,27,141,25,"profile"],[164,34,141,37],[164,36,141,54],[165,6,142,4],[165,12,142,10],[165,16,142,14],[165,17,142,15,"set"],[165,20,142,18],[165,21,142,19,"CACHE_KEYS"],[165,31,142,29],[165,32,142,30,"USER_PROFILE"],[165,44,142,42],[165,46,142,44,"profile"],[165,53,142,51],[165,55,142,53,"DEFAULT_TTL"],[165,66,142,64],[165,67,142,65,"USER_PROFILE"],[165,79,142,77],[165,80,142,78],[166,4,143,2],[168,4,145,2],[169,4,146,2],[169,10,146,8,"getUserProfile"],[169,24,146,22,"getUserProfile"],[169,25,146,22],[169,27,146,46],[170,6,147,4],[170,13,147,11],[170,19,147,17],[170,23,147,21],[170,24,147,22,"get"],[170,27,147,25],[170,28,147,26,"CACHE_KEYS"],[170,38,147,36],[170,39,147,37,"USER_PROFILE"],[170,51,147,49],[170,52,147,50],[171,4,148,2],[173,4,150,2],[174,4,151,2],[174,10,151,8,"cacheChildrenProfiles"],[174,31,151,29,"cacheChildrenProfiles"],[174,32,151,30,"children"],[174,40,151,45],[174,42,151,62],[175,6,152,4],[175,12,152,10],[175,16,152,14],[175,17,152,15,"set"],[175,20,152,18],[175,21,152,19,"CACHE_KEYS"],[175,31,152,29],[175,32,152,30,"CHILDREN_PROFILES"],[175,49,152,47],[175,51,152,49,"children"],[175,59,152,57],[175,61,152,59,"DEFAULT_TTL"],[175,72,152,70],[175,73,152,71,"CHILDREN_PROFILES"],[175,90,152,88],[175,91,152,89],[176,4,153,2],[178,4,155,2],[179,4,156,2],[179,10,156,8,"getChildrenProfiles"],[179,29,156,27,"getChildrenProfiles"],[179,30,156,27],[179,32,156,53],[180,6,157,4],[180,13,157,11],[180,19,157,17],[180,23,157,21],[180,24,157,22,"get"],[180,27,157,25],[180,28,157,26,"CACHE_KEYS"],[180,38,157,36],[180,39,157,37,"CHILDREN_PROFILES"],[180,56,157,54],[180,57,157,55],[181,4,158,2],[183,4,160,2],[184,4,161,2],[184,10,161,8,"cacheDiaryEntries"],[184,27,161,25,"cacheDiaryEntries"],[184,28,161,26,"entries"],[184,35,161,40],[184,37,161,57],[185,6,162,4],[186,6,163,4],[186,12,163,10,"sevenDaysAgo"],[186,24,163,22],[186,27,163,25,"Date"],[186,31,163,29],[186,32,163,30,"now"],[186,35,163,33],[186,36,163,34],[186,37,163,35],[186,40,163,39],[186,41,163,40],[186,44,163,43],[186,46,163,45],[186,49,163,48],[186,51,163,50],[186,54,163,53],[186,56,163,55],[186,59,163,58],[186,63,163,63],[187,6,164,4],[187,12,164,10,"recentEntries"],[187,25,164,23],[187,28,164,26,"entries"],[187,35,164,33],[187,36,164,34,"filter"],[187,42,164,40],[187,43,164,41,"entry"],[187,48,164,46],[187,52,164,50],[188,8,165,6],[188,14,165,12,"entryTime"],[188,23,165,21],[188,26,165,24],[188,30,165,28,"Date"],[188,34,165,32],[188,35,165,33,"entry"],[188,40,165,38],[188,41,165,39,"timestamp"],[188,50,165,48],[188,51,165,49],[188,52,165,50,"getTime"],[188,59,165,57],[188,60,165,58],[188,61,165,59],[189,8,166,6],[189,15,166,13,"entryTime"],[189,24,166,22],[189,27,166,25,"sevenDaysAgo"],[189,39,166,37],[190,6,167,4],[190,7,167,5],[190,8,167,6],[191,6,169,4],[191,12,169,10],[191,16,169,14],[191,17,169,15,"set"],[191,20,169,18],[191,21,169,19,"CACHE_KEYS"],[191,31,169,29],[191,32,169,30,"DIARY_ENTRIES"],[191,45,169,43],[191,47,169,45,"recentEntries"],[191,60,169,58],[191,62,169,60,"DEFAULT_TTL"],[191,73,169,71],[191,74,169,72,"DIARY_ENTRIES"],[191,87,169,85],[191,88,169,86],[192,4,170,2],[194,4,172,2],[195,4,173,2],[195,10,173,8,"getDiaryEntries"],[195,25,173,23,"getDiaryEntries"],[195,26,173,23],[195,28,173,49],[196,6,174,4],[196,13,174,11],[196,19,174,17],[196,23,174,21],[196,24,174,22,"get"],[196,27,174,25],[196,28,174,26,"CACHE_KEYS"],[196,38,174,36],[196,39,174,37,"DIARY_ENTRIES"],[196,52,174,50],[196,53,174,51],[197,4,175,2],[199,4,177,2],[200,4,178,2],[200,10,178,8,"cacheScannerResult"],[200,28,178,26,"cacheScannerResult"],[200,29,178,27,"result"],[200,35,178,38],[200,37,178,55],[201,6,179,4],[201,12,179,10,"existingResults"],[201,27,179,25],[201,30,179,28],[201,37,179,34],[201,41,179,38],[201,42,179,39,"get"],[201,45,179,42],[201,46,179,50,"CACHE_KEYS"],[201,56,179,60],[201,57,179,61,"AI_SCANNER_RESULTS"],[201,75,179,79],[201,76,179,80],[201,81,179,84],[201,83,179,86],[203,6,181,4],[204,6,182,4,"existingResults"],[204,21,182,19],[204,22,182,20,"unshift"],[204,29,182,27],[204,30,182,28,"result"],[204,36,182,34],[204,37,182,35],[206,6,184,4],[207,6,185,4],[207,12,185,10,"limitedResults"],[207,26,185,24],[207,29,185,27,"existingResults"],[207,44,185,42],[207,45,185,43,"slice"],[207,50,185,48],[207,51,185,49],[207,52,185,50],[207,54,185,52],[207,56,185,54],[207,57,185,55],[208,6,187,4],[208,12,187,10],[208,16,187,14],[208,17,187,15,"set"],[208,20,187,18],[208,21,187,19,"CACHE_KEYS"],[208,31,187,29],[208,32,187,30,"AI_SCANNER_RESULTS"],[208,50,187,48],[208,52,187,50,"limitedResults"],[208,66,187,64],[208,68,187,66,"DEFAULT_TTL"],[208,79,187,77],[208,80,187,78,"AI_SCANNER_RESULTS"],[208,98,187,96],[208,99,187,97],[209,4,188,2],[211,4,190,2],[212,4,191,2],[212,10,191,8,"getScannerResults"],[212,27,191,25,"getScannerResults"],[212,28,191,25],[212,30,191,51],[213,6,192,4],[213,13,192,11],[213,19,192,17],[213,23,192,21],[213,24,192,22,"get"],[213,27,192,25],[213,28,192,26,"CACHE_KEYS"],[213,38,192,36],[213,39,192,37,"AI_SCANNER_RESULTS"],[213,57,192,55],[213,58,192,56],[214,4,193,2],[216,4,195,2],[217,4,196,2],[217,10,196,8,"cacheCoachMessages"],[217,28,196,26,"cacheCoachMessages"],[217,29,196,27,"messages"],[217,37,196,42],[217,39,196,59],[218,6,197,4],[219,6,198,4],[219,12,198,10,"limitedMessages"],[219,27,198,25],[219,30,198,28,"messages"],[219,38,198,36],[219,39,198,37,"slice"],[219,44,198,42],[219,45,198,43],[219,46,198,44],[219,48,198,46],[219,49,198,47],[220,6,199,4],[220,12,199,10],[220,16,199,14],[220,17,199,15,"set"],[220,20,199,18],[220,21,199,19,"CACHE_KEYS"],[220,31,199,29],[220,32,199,30,"COACH_MESSAGES"],[220,46,199,44],[220,48,199,46,"limitedMessages"],[220,63,199,61],[220,65,199,63,"DEFAULT_TTL"],[220,76,199,74],[220,77,199,75,"COACH_MESSAGES"],[220,91,199,89],[220,92,199,90],[221,4,200,2],[223,4,202,2],[224,4,203,2],[224,10,203,8,"getCoachMessages"],[224,26,203,24,"getCoachMessages"],[224,27,203,24],[224,29,203,50],[225,6,204,4],[225,13,204,11],[225,19,204,17],[225,23,204,21],[225,24,204,22,"get"],[225,27,204,25],[225,28,204,26,"CACHE_KEYS"],[225,38,204,36],[225,39,204,37,"COACH_MESSAGES"],[225,53,204,51],[225,54,204,52],[226,4,205,2],[228,4,207,2],[229,4,208,2],[229,10,208,8,"cacheMealPlans"],[229,24,208,22,"cacheMealPlans"],[229,25,208,23,"plans"],[229,30,208,35],[229,32,208,52],[230,6,209,4],[230,12,209,10],[230,16,209,14],[230,17,209,15,"set"],[230,20,209,18],[230,21,209,19,"CACHE_KEYS"],[230,31,209,29],[230,32,209,30,"MEAL_PLANS"],[230,42,209,40],[230,44,209,42,"plans"],[230,49,209,47],[230,51,209,49,"DEFAULT_TTL"],[230,62,209,60],[230,63,209,61,"MEAL_PLANS"],[230,73,209,71],[230,74,209,72],[231,4,210,2],[233,4,212,2],[234,4,213,2],[234,10,213,8,"getMealPlans"],[234,22,213,20,"getMealPlans"],[234,23,213,20],[234,25,213,46],[235,6,214,4],[235,13,214,11],[235,19,214,17],[235,23,214,21],[235,24,214,22,"get"],[235,27,214,25],[235,28,214,26,"CACHE_KEYS"],[235,38,214,36],[235,39,214,37,"MEAL_PLANS"],[235,49,214,47],[235,50,214,48],[236,4,215,2],[238,4,217,2],[239,4,218,2],[239,10,218,8,"cacheFoodDatabase"],[239,27,218,25,"cacheFoodDatabase"],[239,28,218,26,"foods"],[239,33,218,38],[239,35,218,55],[240,6,219,4],[240,12,219,10],[240,16,219,14],[240,17,219,15,"set"],[240,20,219,18],[240,21,219,19,"CACHE_KEYS"],[240,31,219,29],[240,32,219,30,"FOOD_DATABASE"],[240,45,219,43],[240,47,219,45,"foods"],[240,52,219,50],[240,54,219,52,"DEFAULT_TTL"],[240,65,219,63],[240,66,219,64,"FOOD_DATABASE"],[240,79,219,77],[240,80,219,78],[241,4,220,2],[243,4,222,2],[244,4,223,2],[244,10,223,8,"getFoodDatabase"],[244,25,223,23,"getFoodDatabase"],[244,26,223,23],[244,28,223,49],[245,6,224,4],[245,13,224,11],[245,19,224,17],[245,23,224,21],[245,24,224,22,"get"],[245,27,224,25],[245,28,224,26,"CACHE_KEYS"],[245,38,224,36],[245,39,224,37,"FOOD_DATABASE"],[245,52,224,50],[245,53,224,51],[246,4,225,2],[248,4,227,2],[250,4,229,2],[251,4,230,2],[251,10,230,8,"addToOfflineQueue"],[251,27,230,25,"addToOfflineQueue"],[251,28,230,26,"operation"],[251,37,230,91],[251,39,230,108],[252,6,231,4],[252,10,231,8],[253,8,232,6],[253,14,232,12,"queue"],[253,19,232,17],[253,22,232,20],[253,28,232,26],[253,32,232,30],[253,33,232,31,"getOfflineQueue"],[253,48,232,46],[253,49,232,47],[253,50,232,48],[254,8,234,6],[254,14,234,12,"newItem"],[254,21,234,37],[254,24,234,40],[255,10,235,8,"id"],[255,12,235,10],[255,14,235,12],[255,25,235,23,"Date"],[255,29,235,27],[255,30,235,28,"now"],[255,33,235,31],[255,34,235,32],[255,35,235,33],[255,39,235,37,"Math"],[255,43,235,41],[255,44,235,42,"random"],[255,50,235,48],[255,51,235,49],[255,52,235,50],[255,53,235,51,"toString"],[255,61,235,59],[255,62,235,60],[255,64,235,62],[255,65,235,63],[255,66,235,64,"substring"],[255,75,235,73],[255,76,235,74],[255,77,235,75],[255,78,235,76],[255,80,235,78],[256,10,236,8],[256,13,236,11,"operation"],[256,22,236,20],[257,10,237,8,"timestamp"],[257,19,237,17],[257,21,237,19,"Date"],[257,25,237,23],[257,26,237,24,"now"],[257,29,237,27],[257,30,237,28],[257,31,237,29],[258,10,238,8,"retries"],[258,17,238,15],[258,19,238,17],[259,8,239,6],[259,9,239,7],[260,8,241,6,"queue"],[260,13,241,11],[260,14,241,12,"push"],[260,18,241,16],[260,19,241,17,"newItem"],[260,26,241,24],[260,27,241,25],[261,8,242,6],[261,14,242,12],[261,18,242,16],[261,19,242,17,"set"],[261,22,242,20],[261,23,242,21,"CACHE_KEYS"],[261,33,242,31],[261,34,242,32,"OFFLINE_QUEUE"],[261,47,242,45],[261,49,242,47,"queue"],[261,54,242,52],[261,55,242,53],[262,6,243,4],[262,7,243,5],[262,8,243,6],[262,15,243,13,"error"],[262,20,243,18],[262,22,243,20],[263,8,244,6,"console"],[263,15,244,13],[263,16,244,14,"error"],[263,21,244,19],[263,22,244,20],[263,54,244,52],[263,56,244,54,"error"],[263,61,244,59],[263,62,244,60],[264,6,245,4],[265,4,246,2],[267,4,248,2],[268,4,249,2],[268,10,249,8,"getOfflineQueue"],[268,25,249,23,"getOfflineQueue"],[268,26,249,23],[268,28,249,55],[269,6,250,4],[269,13,250,11],[269,20,250,17],[269,24,250,21],[269,25,250,22,"get"],[269,28,250,25],[269,29,250,46,"CACHE_KEYS"],[269,39,250,56],[269,40,250,57,"OFFLINE_QUEUE"],[269,53,250,70],[269,54,250,71],[269,59,250,75],[269,61,250,77],[270,4,251,2],[272,4,253,2],[273,4,254,2],[273,10,254,8,"removeFromOfflineQueue"],[273,32,254,30,"removeFromOfflineQueue"],[273,33,254,31,"itemId"],[273,39,254,45],[273,41,254,62],[274,6,255,4],[274,10,255,8],[275,8,256,6],[275,14,256,12,"queue"],[275,19,256,17],[275,22,256,20],[275,28,256,26],[275,32,256,30],[275,33,256,31,"getOfflineQueue"],[275,48,256,46],[275,49,256,47],[275,50,256,48],[276,8,257,6],[276,14,257,12,"updatedQueue"],[276,26,257,24],[276,29,257,27,"queue"],[276,34,257,32],[276,35,257,33,"filter"],[276,41,257,39],[276,42,257,40,"item"],[276,46,257,44],[276,50,257,48,"item"],[276,54,257,52],[276,55,257,53,"id"],[276,57,257,55],[276,62,257,60,"itemId"],[276,68,257,66],[276,69,257,67],[277,8,258,6],[277,14,258,12],[277,18,258,16],[277,19,258,17,"set"],[277,22,258,20],[277,23,258,21,"CACHE_KEYS"],[277,33,258,31],[277,34,258,32,"OFFLINE_QUEUE"],[277,47,258,45],[277,49,258,47,"updatedQueue"],[277,61,258,59],[277,62,258,60],[278,6,259,4],[278,7,259,5],[278,8,259,6],[278,15,259,13,"error"],[278,20,259,18],[278,22,259,20],[279,8,260,6,"console"],[279,15,260,13],[279,16,260,14,"error"],[279,21,260,19],[279,22,260,20],[279,58,260,56],[279,60,260,58,"error"],[279,65,260,63],[279,66,260,64],[280,6,261,4],[281,4,262,2],[283,4,264,2],[284,4,265,2],[284,10,265,8,"incrementRetryCount"],[284,29,265,27,"incrementRetryCount"],[284,30,265,28,"itemId"],[284,36,265,42],[284,38,265,59],[285,6,266,4],[285,10,266,8],[286,8,267,6],[286,14,267,12,"queue"],[286,19,267,17],[286,22,267,20],[286,28,267,26],[286,32,267,30],[286,33,267,31,"getOfflineQueue"],[286,48,267,46],[286,49,267,47],[286,50,267,48],[287,8,268,6],[287,14,268,12,"updatedQueue"],[287,26,268,24],[287,29,268,27,"queue"],[287,34,268,32],[287,35,268,33,"map"],[287,38,268,36],[287,39,268,37,"item"],[287,43,268,41],[287,47,269,8,"item"],[287,51,269,12],[287,52,269,13,"id"],[287,54,269,15],[287,59,269,20,"itemId"],[287,65,269,26],[287,68,270,12],[288,10,270,14],[288,13,270,17,"item"],[288,17,270,21],[289,10,270,23,"retries"],[289,17,270,30],[289,19,270,32,"item"],[289,23,270,36],[289,24,270,37,"retries"],[289,31,270,44],[289,34,270,47],[290,8,270,49],[290,9,270,50],[290,12,271,12,"item"],[290,16,272,6],[290,17,272,7],[291,8,273,6],[291,14,273,12],[291,18,273,16],[291,19,273,17,"set"],[291,22,273,20],[291,23,273,21,"CACHE_KEYS"],[291,33,273,31],[291,34,273,32,"OFFLINE_QUEUE"],[291,47,273,45],[291,49,273,47,"updatedQueue"],[291,61,273,59],[291,62,273,60],[292,6,274,4],[292,7,274,5],[292,8,274,6],[292,15,274,13,"error"],[292,20,274,18],[292,22,274,20],[293,8,275,6,"console"],[293,15,275,13],[293,16,275,14,"error"],[293,21,275,19],[293,22,275,20],[293,55,275,53],[293,57,275,55,"error"],[293,62,275,60],[293,63,275,61],[294,6,276,4],[295,4,277,2],[297,4,279,2],[298,4,280,2],[298,10,280,8,"clearOfflineQueue"],[298,27,280,25,"clearOfflineQueue"],[298,28,280,25],[298,30,280,43],[299,6,281,4],[299,12,281,10],[299,16,281,14],[299,17,281,15,"set"],[299,20,281,18],[299,21,281,19,"CACHE_KEYS"],[299,31,281,29],[299,32,281,30,"OFFLINE_QUEUE"],[299,45,281,43],[299,47,281,45],[299,49,281,47],[299,50,281,48],[300,4,282,2],[302,4,284,2],[303,4,285,2],[303,10,285,8,"setLastSyncTimestamp"],[303,30,285,28,"setLastSyncTimestamp"],[303,31,285,28],[303,33,285,46],[304,6,286,4],[304,12,286,10,"AsyncStorage"],[304,24,286,22],[304,25,286,22,"default"],[304,32,286,22],[304,33,286,23,"setItem"],[304,40,286,30],[304,41,286,31,"CACHE_KEYS"],[304,51,286,41],[304,52,286,42,"LAST_SYNC"],[304,61,286,51],[304,63,286,53,"Date"],[304,67,286,57],[304,68,286,58,"now"],[304,71,286,61],[304,72,286,62],[304,73,286,63],[304,74,286,64,"toString"],[304,82,286,72],[304,83,286,73],[304,84,286,74],[304,85,286,75],[305,4,287,2],[307,4,289,2],[308,4,290,2],[308,10,290,8,"getLastSyncTimestamp"],[308,30,290,28,"getLastSyncTimestamp"],[308,31,290,28],[308,33,290,55],[309,6,291,4],[309,10,291,8],[310,8,292,6],[310,14,292,12,"timestamp"],[310,23,292,21],[310,26,292,24],[310,32,292,30,"AsyncStorage"],[310,44,292,42],[310,45,292,42,"default"],[310,52,292,42],[310,53,292,43,"getItem"],[310,60,292,50],[310,61,292,51,"CACHE_KEYS"],[310,71,292,61],[310,72,292,62,"LAST_SYNC"],[310,81,292,71],[310,82,292,72],[311,8,293,6],[311,15,293,13,"timestamp"],[311,24,293,22],[311,27,293,25,"parseInt"],[311,35,293,33],[311,36,293,34,"timestamp"],[311,45,293,43],[311,46,293,44],[311,49,293,47],[311,53,293,51],[312,6,294,4],[312,7,294,5],[312,8,294,6],[312,15,294,13,"error"],[312,20,294,18],[312,22,294,20],[313,8,295,6],[313,15,295,13],[313,19,295,17],[314,6,296,4],[315,4,297,2],[317,4,299,2],[318,4,300,2],[318,10,300,8,"getCacheSize"],[318,22,300,20,"getCacheSize"],[318,23,300,20],[318,25,300,40],[319,6,301,4],[319,10,301,8],[320,8,302,6],[320,14,302,12,"keys"],[320,18,302,16],[320,21,302,19,"Object"],[320,27,302,25],[320,28,302,26,"values"],[320,34,302,32],[320,35,302,33,"CACHE_KEYS"],[320,45,302,43],[320,46,302,44],[321,8,303,6],[321,12,303,10,"totalSize"],[321,21,303,19],[321,24,303,22],[321,25,303,23],[322,8,305,6],[322,13,305,11],[322,19,305,17,"key"],[322,22,305,20],[322,26,305,24,"keys"],[322,30,305,28],[322,32,305,30],[323,10,306,8],[323,16,306,14,"item"],[323,20,306,18],[323,23,306,21],[323,29,306,27,"AsyncStorage"],[323,41,306,39],[323,42,306,39,"default"],[323,49,306,39],[323,50,306,40,"getItem"],[323,57,306,47],[323,58,306,48,"key"],[323,61,306,51],[323,62,306,52],[324,10,307,8],[324,14,307,12,"item"],[324,18,307,16],[324,20,307,18],[325,12,308,10,"totalSize"],[325,21,308,19],[325,25,308,23],[325,29,308,27,"Blob"],[325,33,308,31],[325,34,308,32],[325,35,308,33,"item"],[325,39,308,37],[325,40,308,38],[325,41,308,39],[325,42,308,40,"size"],[325,46,308,44],[326,10,309,8],[327,8,310,6],[328,8,312,6],[328,15,312,13,"totalSize"],[328,24,312,22],[328,25,312,23],[328,26,312,24],[329,6,313,4],[329,7,313,5],[329,8,313,6],[329,15,313,13,"error"],[329,20,313,18],[329,22,313,20],[330,8,314,6,"console"],[330,15,314,13],[330,16,314,14,"error"],[330,21,314,19],[330,22,314,20],[330,53,314,51],[330,55,314,53,"error"],[330,60,314,58],[330,61,314,59],[331,8,315,6],[331,15,315,13],[331,16,315,14],[332,6,316,4],[333,4,317,2],[334,2,318,0],[335,2,320,7],[335,8,320,13,"cacheManager"],[335,20,320,25],[335,23,320,28],[335,27,320,32,"CacheManager"],[335,39,320,44],[335,40,320,45],[335,41,320,46],[336,0,320,47],[336,3]],"functionMap":{"names":["<global>","CacheManager","CacheManager#initialize","CacheManager#encrypt","CacheManager#decrypt","CacheManager#set","CacheManager#get","CacheManager#remove","CacheManager#clearAll","CacheManager#cacheUserProfile","CacheManager#getUserProfile","CacheManager#cacheChildrenProfiles","CacheManager#getChildrenProfiles","CacheManager#cacheDiaryEntries","entries.filter$argument_0","CacheManager#getDiaryEntries","CacheManager#cacheScannerResult","CacheManager#getScannerResults","CacheManager#cacheCoachMessages","CacheManager#getCoachMessages","CacheManager#cacheMealPlans","CacheManager#getMealPlans","CacheManager#cacheFoodDatabase","CacheManager#getFoodDatabase","CacheManager#addToOfflineQueue","CacheManager#getOfflineQueue","CacheManager#removeFromOfflineQueue","queue.filter$argument_0","CacheManager#incrementRetryCount","queue.map$argument_0","CacheManager#clearOfflineQueue","CacheManager#setLastSyncTimestamp","CacheManager#getLastSyncTimestamp","CacheManager#getCacheSize"],"mappings":"AAA;AC2C;ECI;GDO;EEG;GFS;EGG;GHO;EIG;GJe;EKG;GLqB;EMG;GNM;EOG;GPO;EQG;GRE;ESG;GTE;EUG;GVE;EWG;GXE;EYG;yCCG;KDG;GZG;EcG;GdE;EeG;GfU;EgBG;GhBE;EiBG;GjBI;EkBG;GlBE;EmBG;GnBE;EoBG;GpBE;EqBG;GrBE;EsBG;GtBE;EuBK;GvBgB;EwBG;GxBE;EyBG;wCCG,0BD;GzBK;E2BG;qCCG;gBDG;G3BM;E6BG;G7BE;E8BG;G9BE;E+BG;G/BO;EgCG;GhCiB;CDC"},"hasCjsExports":false},"type":"js/module"}]}